{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\project\\\\frontend\\\\src\\\\components\\\\ClaimButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { api } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ClaimButton = ({\n  userId,\n  onPointsClaimed\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleClaim = async () => {\n    if (!userId) return;\n    try {\n      setIsLoading(true);\n      const response = await api.claimPoints(userId);\n      if (response) {\n        console.log(`Claimed ${response.points} points!`);\n        onPointsClaimed();\n      }\n    } catch (error) {\n      console.error('Error claiming points:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClaim,\n    disabled: !userId || isLoading,\n    className: `claim-button ${isLoading ? 'loading' : ''}`,\n    children: isLoading ? 'Claiming...' : 'Claim Points'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimButton, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n_c = ClaimButton;\nvar _c;\n$RefreshReg$(_c, \"ClaimButton\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","ClaimButton","userId","onPointsClaimed","_s","isLoading","setIsLoading","handleClaim","response","claimPoints","console","log","points","error","onClick","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/programing/project/frontend/src/components/ClaimButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { api } from '../api';\r\n\r\ninterface ClaimButtonProps {\r\n  userId: string | null;\r\n  onPointsClaimed: () => void;\r\n}\r\n\r\nexport const ClaimButton: React.FC<ClaimButtonProps> = ({ userId, onPointsClaimed }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleClaim = async () => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await api.claimPoints(userId);\r\n      if (response) {\r\n        console.log(`Claimed ${response.points} points!`);\r\n        onPointsClaimed();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error claiming points:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleClaim}\r\n      disabled={!userId || isLoading}\r\n      className={`claim-button ${isLoading ? 'loading' : ''}`}\r\n    >\r\n      {isLoading ? 'Claiming...' : 'Claim Points'}\r\n    </button>\r\n  );\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO7B,OAAO,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACL,MAAM,EAAE;IAEb,IAAI;MACFI,YAAY,CAAC,IAAI,CAAC;MAClB,MAAME,QAAQ,GAAG,MAAMV,GAAG,CAACW,WAAW,CAACP,MAAM,CAAC;MAC9C,IAAIM,QAAQ,EAAE;QACZE,OAAO,CAACC,GAAG,CAAC,WAAWH,QAAQ,CAACI,MAAM,UAAU,CAAC;QACjDT,eAAe,CAAC,CAAC;MACnB;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRP,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IACEc,OAAO,EAAEP,WAAY;IACrBQ,QAAQ,EAAE,CAACb,MAAM,IAAIG,SAAU;IAC/BW,SAAS,EAAE,gBAAgBX,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAY,QAAA,EAEvDZ,SAAS,GAAG,aAAa,GAAG;EAAc;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEb,CAAC;AAACjB,EAAA,CA7BWH,WAAuC;AAAAqB,EAAA,GAAvCrB,WAAuC;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}