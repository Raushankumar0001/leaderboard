{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\project\\\\frontend\\\\src\\\\components\\\\ClaimHistory.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ClaimHistory = ({\n  userId\n}) => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    loadHistory();\n  }, [userId]);\n  const loadHistory = async () => {\n    try {\n      setLoading(true);\n      const data = await api.getClaimHistory(userId);\n      setHistory(data);\n    } catch (error) {\n      console.error('Error loading claim history:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading history...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"claim-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Claim History \", userId ? 'for User' : '(All Users)']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-list\",\n      children: history.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-user\",\n          children: entry.userId.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-points\",\n          children: [\"+\", entry.points, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-time\",\n          children: new Date(entry.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, entry._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimHistory, \"Ieukcr00HhsUBPlfQ8IG0OBl+dQ=\");\n_c = ClaimHistory;\nvar _c;\n$RefreshReg$(_c, \"ClaimHistory\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","ClaimHistory","userId","_s","history","setHistory","loading","setLoading","loadHistory","data","getClaimHistory","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","entry","name","points","Date","timestamp","toLocaleString","_id","_c","$RefreshReg$"],"sources":["D:/programing/project/frontend/src/components/ClaimHistory.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { api } from '../api';\r\n\r\ninterface ClaimHistoryEntry {\r\n  _id: string;\r\n  userId: {\r\n    _id: string;\r\n    name: string;\r\n  };\r\n  points: number;\r\n  timestamp: string;\r\n}\r\n\r\ninterface ClaimHistoryProps {\r\n  userId?: string;  // Optional: to show history for specific user\r\n}\r\n\r\nexport const ClaimHistory: React.FC<ClaimHistoryProps> = ({ userId }) => {\r\n  const [history, setHistory] = useState<ClaimHistoryEntry[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadHistory();\r\n  }, [userId]);\r\n\r\n  const loadHistory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await api.getClaimHistory(userId);\r\n      setHistory(data);\r\n    } catch (error) {\r\n      console.error('Error loading claim history:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading history...</div>;\r\n\r\n  return (\r\n    <div className=\"claim-history\">\r\n      <h3>Claim History {userId ? 'for User' : '(All Users)'}</h3>\r\n      <div className=\"history-list\">\r\n        {history.map((entry) => (\r\n          <div key={entry._id} className=\"history-item\">\r\n            <div className=\"history-user\">{entry.userId.name}</div>\r\n            <div className=\"history-points\">+{entry.points} points</div>\r\n            <div className=\"history-time\">\r\n              {new Date(entry.timestamp).toLocaleString()}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB7B,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAsB,EAAE,CAAC;EAC/D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,IAAI,GAAG,MAAMX,GAAG,CAACY,eAAe,CAACR,MAAM,CAAC;MAC9CG,UAAU,CAACI,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE,oBAAON,OAAA;IAAAa,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEjD,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAAAL,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,GAAI,gBAAc,EAACX,MAAM,GAAG,UAAU,GAAG,aAAa;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5DjB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAL,QAAA,EAC1BT,OAAO,CAACe,GAAG,CAAEC,KAAK,iBACjBpB,OAAA;QAAqBkB,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAC3Cb,OAAA;UAAKkB,SAAS,EAAC,cAAc;UAAAL,QAAA,EAAEO,KAAK,CAAClB,MAAM,CAACmB;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvDjB,OAAA;UAAKkB,SAAS,EAAC,gBAAgB;UAAAL,QAAA,GAAC,GAAC,EAACO,KAAK,CAACE,MAAM,EAAC,SAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5DjB,OAAA;UAAKkB,SAAS,EAAC,cAAc;UAAAL,QAAA,EAC1B,IAAIU,IAAI,CAACH,KAAK,CAACI,SAAS,CAAC,CAACC,cAAc,CAAC;QAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA,GALEG,KAAK,CAACM,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCWF,YAAyC;AAAA0B,EAAA,GAAzC1B,YAAyC;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}