{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\leaderboard\\\\frontend\\\\src\\\\components\\\\Leaderboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Leaderboard = ({\n  refreshTrigger\n}) => {\n  _s();\n  const [leaderboard, setLeaderboard] = useState([]);\n  useEffect(() => {\n    loadLeaderboard();\n  }, [refreshTrigger]);\n  const loadLeaderboard = async () => {\n    try {\n      const data = await api.getLeaderboard();\n      setLeaderboard(data);\n    } catch (error) {\n      console.error('Error loading leaderboard:', error);\n    }\n  };\n  const getRowClassName = rank => {\n    if (rank === 1) return 'gold';\n    if (rank === 2) return 'silver';\n    if (rank === 3) return 'bronze';\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), leaderboard.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `leaderboard-row ${getRowClassName(entry.rank)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.totalPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, entry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"5nWgb4U8OWWBfdWys4hajXcQbUU=\");\n_c = Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Leaderboard","refreshTrigger","_s","leaderboard","setLeaderboard","loadLeaderboard","data","getLeaderboard","error","console","getRowClassName","rank","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","name","totalPoints","id","_c","$RefreshReg$"],"sources":["D:/programing/leaderboard/frontend/src/components/Leaderboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LeaderboardEntry } from '../types';\r\nimport { api } from '../api';\r\n\r\ninterface LeaderboardProps {\r\n  refreshTrigger: number;\r\n}\r\n\r\nexport const Leaderboard: React.FC<LeaderboardProps> = ({ refreshTrigger }) => {\r\n  const [leaderboard, setLeaderboard] = useState<LeaderboardEntry[]>([]);\r\n\r\n  useEffect(() => {\r\n    loadLeaderboard();\r\n  }, [refreshTrigger]);\r\n\r\n  const loadLeaderboard = async () => {\r\n    try {\r\n      const data = await api.getLeaderboard();\r\n      setLeaderboard(data);\r\n    } catch (error) {\r\n      console.error('Error loading leaderboard:', error);\r\n    }\r\n  };\r\n\r\n  const getRowClassName = (rank: number) => {\r\n    if (rank === 1) return 'gold';\r\n    if (rank === 2) return 'silver';\r\n    if (rank === 3) return 'bronze';\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      <h2>Leaderboard</h2>\r\n      <div className=\"leaderboard-table\">\r\n        <div className=\"leaderboard-header\">\r\n          <div>Rank</div>\r\n          <div>Name</div>\r\n          <div>Points</div>\r\n        </div>\r\n        {leaderboard.map((entry) => (\r\n          <div\r\n            key={entry.id}\r\n            className={`leaderboard-row ${getRowClassName(entry.rank)}`}\r\n          >\r\n            <div>{entry.rank}</div>\r\n            <div>{entry.name}</div>\r\n            <div>{entry.totalPoints}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}